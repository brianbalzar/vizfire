list.dir()
list.dirs()
getwd()
list.files()
install.packages('here')
library(here)
here::here()
here::dr_here()
source("~/r/vizfire/setup.R")
help(value_box)
library(bslib)
help(value_box)
#' @param high A character string specifying the high color for the gradient. Default is NULL.
#' @param theme A ggplot2 theme function to apply to the plot. Default is theme_minimal().
#'
#' @return A ggplot2 heatmap with the specified customizations.
#' @examples
#' library(ggplot2)
#' data <- data.frame(x = rep(1:10, each = 10), y = rep(1:10, 10), fill = runif(100))
#' spitfire_heatmap(data, x = "x", y = "y", fill = "fill", palette = 1)
#'
#' @export
spitfire_heatmap <- function(data, x, y, fill, palette = 1, low = NULL, high = NULL, theme = ggplot2::theme_minimal()) {
palettes <- list(
palette1 = c("#e0f3db", "#a8ddb5", "#43a2ca"),
palette2 = c("#f7fcfd", "#e0ecf4", "#8856a7"),
palette3 = c("#f7fcf5", "#e5f5e0", "#31a354"),
palette4 = c("#fee5d9", "#fcae91", "#fb6a4a"),
palette5 = c("#edf8fb", "#b3cde3", "#8c96c6")
)
if (is.null(low) || is.null(high)) {
colors <- palettes[[palette]]
low <- colors[1]
high <- colors[length(colors)]
}
ggplot(data, aes_string(x = x, y = y, fill = fill)) +
geom_tile() +
scale_fill_gradient(low = low, high = high) +
theme
}
library(ggplot2)
# Example data
data <- data.frame(
x = rep(1:10, each = 10),
y = rep(1:10, 10),
fill = runif(100)
)
# Generate heatmap with default settings
spitfire_heatmap(data, x = "x", y = "y", fill = "fill", palette = 1)
# Generate heatmap with custom low and high colors
spitfire_heatmap(data, x = "x", y = "y", fill = "fill", low = "#00FF00", high = "#FF0000")
# Generate heatmap with a different theme
spitfire_heatmap(data, x = "x", y = "y", fill = "fill", palette = 2, theme = ggplot2::theme_classic())
source("~/r/vizfire/setup.R")
git init
here::here()
clipr::write_clip(here::here())
usethis::use_github_action_check_standard()
